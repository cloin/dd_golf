---
- name: Get metrics
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:

    - name: Fetch Datadog range zone metrics
      cloin.datadog.datadog_query:
        api_key: "{{ datadog_api_key }}"
        app_key: "{{ datadog_app_key }}"
        endpoint_url: "{{ datadog_query_endpoint }}"
        queries:
          - 'avg:swingsight.count_zone_1{*}'
          - 'avg:swingsight.count_zone_2{*}'
          - 'avg:swingsight.count_zone_3{*}'
      register: metrics

    - name: Get zone with most balls
      ansible.builtin.set_fact:
        highest_metric: "{{ metrics.metrics_data | dictsort(by='value') | last }}"

    - name: Extract zone ID from the highest metric
      ansible.builtin.set_fact:
        zone_match: "{{ highest_metric | regex_search('zone_(\\d+)') }}"

    - name: Dispatch RangeRoamer
      ansible.builtin.debug:
        msg: "Dispatching RangeRoamer to {{ zone_match }}"
      when: zone_match is not none
